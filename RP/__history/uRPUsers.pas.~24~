unit uRPUsers;

interface

uses
  System.SysUtils, System.Classes, IdCustomHTTPServer, superobject, uResponses;

type
  IRPUsers = interface
    procedure Add();
  end;

  TRPUsers = class(TInterfacedObject, IRPUsers)
  private
    FAResponseInfo: TIdHTTPResponseInfo;
    FARequestInfo: TIdHTTPRequestInfo;
    FResponses: IResponses;
    procedure SetARequestInfo(const Value: TIdHTTPRequestInfo);
    procedure SetAResponseInfo(const Value: TIdHTTPResponseInfo);
  published
    constructor Create(aRequestInfo: TIdHTTPRequestInfo; aResponseInfo: TIdHTTPResponseInfo);
    procedure Add();
    property ARequestInfo: TIdHTTPRequestInfo read FARequestInfo write SetARequestInfo;
    property AResponseInfo: TIdHTTPResponseInfo read FAResponseInfo write SetAResponseInfo;
  end;

implementation

{ TRPUsers }

procedure TRPUsers.Add;
begin
  try
    // add user here in db
    FResponses.OK();
  except
    on E: Exception do
      FResponses.Error(E.Message);
  end;
end;

constructor TRPUsers.Create(aRequestInfo: TIdHTTPRequestInfo; aResponseInfo: TIdHTTPResponseInfo);
begin
  FResponses := TResponses.Create(aRequestInfo, aResponseInfo);
  FAResponseInfo := aResponseInfo;
  FARequestInfo := aRequestInfo;
end;

procedure TRPUsers.SetARequestInfo(const Value: TIdHTTPRequestInfo);
begin
  FARequestInfo := Value;
end;

procedure TRPUsers.SetAResponseInfo(const Value: TIdHTTPResponseInfo);
begin
  FAResponseInfo := Value;
end;

end.

