unit uCommandGet;

interface

uses
  System.Classes, IdContext, IdCustomHTTPServer, System.Generics.Collections,
  superobject, System.NetEncoding, System.IOUtils, Vcl.Forms, uUniqueName, uDB, uCommon;

type
  TCommandGet = class
  private
    FContext: TIdContext;
    FRequestInfo: TIdHTTPRequestInfo;
    FResponseInfo: TIdHTTPResponseInfo;
    function ParseFirstSection(): string;
  public
    constructor Create(AContext: TIdContext; ARequestInfo: TIdHTTPRequestInfo; AResponseInfo: TIdHTTPResponseInfo);
    procedure Execute();
    property Context: TIdContext read FContext write FContext;
    property RequestInfo: TIdHTTPRequestInfo read FRequestInfo write FRequestInfo;
    property ResponseInfo: TIdHTTPResponseInfo read FResponseInfo write FResponseInfo;
  end;

implementation

uses
  uRPUsers,
  uRPTests,
  uRPFiles,
  uRPSystem,
  uDecodePostRequest,
  System.SysUtils,
  DateUtils, uConst;

{ TCommandGet }
constructor TCommandGet.Create(AContext: TIdContext; ARequestInfo: TIdHTTPRequestInfo; AResponseInfo: TIdHTTPResponseInfo);
begin
  FContext := AContext;
  FRequestInfo := ARequestInfo;
  FResponseInfo := AResponseInfo;
  Execute();
end;

procedure TCommandGet.Execute();

  procedure DownloadFile();
  var
    f: ISP<TRPFiles>;
  begin
    f := TSP<TRPFiles>.Create(TRPFiles.Create(FContext,FRequestInfo, FResponseInfo, true));
    f.Download();
  end;

var
  firstSection: string;
  r: ISP<TResponses>;
  u: ISP<TRPUsers>;
  t: ISP<TRPTests>;
  f: ISP<TRPFiles>;
  a: ISP<TRPApi>;
  s: ISP<TRPSystem>;

begin
  r := TSP<TResponses>.Create(TResponses.Create(FRequestInfo, FResponseInfo));

  try
    firstSection := ParseFirstSection;

    if (SameStr(firstSection, 'Users')) then
      u := TSP<TRPUsers>.Create(TRPUsers.Create(FContext, FRequestInfo, FResponseInfo))
    else if (SameStr(firstSection, 'Test')) then
      t := TSP<TRPTests>.Create(TRPTests.Create(FContext, FRequestInfo, FResponseInfo))
    else if SameStr(firstSection, 'Files') then
      f := TSP<TRPFiles>.Create(TRPFiles.Create(FContext, FRequestInfo, FResponseInfo))
    else if SameStr(firstSection, 'Api') then
      a := TSP<TRPApi>.Create(TRPApi.Create(FContext, FRequestInfo, FResponseInfo))
    else if SameStr(firstSection, 'System') then
      s := TSP<TRPSystem>.Create(TRPSystem.Create(FContext, FRequestInfo, FResponseInfo));

    DownloadFile();
    FResponseInfo.ResponseNo := 404;
  except
    on E: Exception do
      r.Error(e.Message);
  end;
end;

function TCommandGet.ParseFirstSection(): string;
var
  a: TArray<string>;
begin
  Result := '';
  a := FRequestInfo.URI.Split(['/']);
  if Length(a) > 0 then
    Result := a[1]; // Parses Users from /Users/Add for example....
end;



end.

